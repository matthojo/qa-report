#! /usr/bin/env node

const optimist = require('optimist');
const qaReport = require('../');
const postToPR = require('../src/post-to-pr');
const fs = require('fs');
const chalk = require('chalk');

let argv = optimist
  .alias('h', 'help')
  .describe('h', 'Displays instructions.')

  .alias('o', 'output')
  .describe('o', 'Output path of the template. Defaults to stdout.')

  .alias('i', 'id')
  .describe('i', 'The GitHub ID for the Pull Request (this will automatically comment on the PR thread).')

  .alias('r', 'repo')
  .describe('r', 'The GitHub repo of the Pull Request to comment on. Specified like <owner>/<repoName>.')

  .alias('p', 'preset')
  .describe('p', 'Load in a different config of set questions.')

  .argv;

if (argv.help) {
  optimist.showHelp();
  process.exit(1);
}

init();

/**
 * Initialise everything
 */
function init() {
  qaReport(argv)
    .then(({approval, md}) => {
      if (argv.output) return fs.writeFileSync(argv.output, md);
      if (argv.id && argv.repo) {
        postToPR(argv.id, argv.repo, approval, md)
          .then((repo) => {
            console.log(chalk.green('\nPosted to https://github.com/' + repo + '/issues/' + argv.id + '\n'));
            if (approval === 'REQUEST_CHANGES') {
              console.log(chalk.orange('\nYou have request changes, please add detailed line-by-line feedback directly in the Github Pull Request.'));
            }
          })
          .catch((err) => {
            console.error('\n' + chalk.red(error) + '\n');
            console.log(md);
          });
      } else {
        console.log(md);
      }
    })
    .catch((err) => {
      throw err;
    });
}
